{"version":3,"sources":["constants/api.js","constants/root.js","utils/getDataApi.js","components/img/cancel.png","components/Characters/Characters.js","components/Error/Error.js","components/Comics/Comics.js","components/App/App.js","index.js"],"names":["BASE_URL","URL_COMICS","API_KEY","ROOT_INDEX","document","querySelector","ROOT_MODAL","getComics","url","a","axios","get","params","apikey","limit","res","data","results","console","log","characters","charactersBlock","length","forEach","el","imgSrc","thumbnail","path","extension","name","charactersContainer","img","innerHTML","this","close","addEventListener","comics","id","title","includes","uri","commicsBlock","eventListener","getData","renderComics","Error","render","e","target","closest","getAttribute","getCharecters","Characters","Comics","App"],"mappings":"8OAAaA,EAAW,wCACXC,EAAa,SAGbC,EAAU,mCCJVC,EAAaC,SAASC,cAAc,SACpCC,EAAaF,SAASC,cAAc,U,gBCiCpCE,EAAY,I,8HA9BrB,WAAcC,GAAd,eAAAC,EAAA,+EAE0BC,IAAMC,IAAIH,EAAK,CAC7BI,OAAQ,CACJC,OAAQX,EACRY,MAAO,MALvB,cAEcC,EAFd,yBAQeA,EAAIC,KAAKA,KAAKC,SAR7B,0DAWe,GAXf,yD,yHAcA,WAAoBT,GAApB,eAAAC,EAAA,6DACIS,QAAQC,IAAIX,GADhB,kBAG0BE,IAAMC,IAAN,UAAaH,GAAO,CAClCI,OAAQ,CACJC,OAAQX,KALxB,cAGca,EAHd,yBAQeA,EAAIC,KAAKA,KAAKC,SAR7B,0DAUe,GAVf,yD,+DClBW,MAA0B,mCCuC1B,G,MAAA,I,sFAjCX,SAAOG,GACH,IAAIC,EAAkB,GACnBD,EAAWE,OACVF,EAAWG,SAAQ,SAAAC,GACf,IAAMC,EAASD,EAAGE,UAAUC,KAAbH,qBAAqDA,EAAGE,UAAUE,UACjFP,GAAe,uHAE8BI,EAF9B,+GAIDD,EAAGK,KAJF,qFAUnBR,EAAkB,kFAGtB,IAAMS,EAAmB,wEAC6BT,EAD7B,oCACwEU,EADxE,8BAIzBzB,EAAW0B,UAAYF,EACvBG,KAAKC,U,mBAGT,WACI9B,SAASC,cAAc,UAAU8B,iBAAiB,SAAS,WACvD7B,EAAW0B,UAAY,U,OChBpB,G,MAAA,I,sFAdX,WAUI7B,EAAW6B,UATM,+X,OCgDV,G,MAAA,I,4FA5CX,SAAahB,GACT,IAAIoB,EAAS,GACbpB,EAAKO,SAAQ,YAAgD,IAA9Cc,EAA6C,EAA7CA,GAAIC,EAAyC,EAAzCA,MAAyC,IAAlCZ,UAAYE,EAAsB,EAAtBA,UAAWD,EAAW,EAAXA,KAG7C,IAAIA,EAAKY,SAAS,uBAAwB,CACtC,IAAMd,EAASE,uBAAwCC,EACjDY,EAAMxC,EAAWC,EAAa,IAAMoC,EAA9BrC,cAChBoC,GAAM,wEAESC,EAFT,uCAE0CG,EAF1C,yDAG0Bf,EAH1B,iEAIsBa,EAJtB,wEAUV,IAAMG,EAAY,oCAAgCL,EAAhC,UAClBjC,EAAW6B,UAAYS,EACvBR,KAAKS,kB,2DAET,4BAAAjC,EAAA,sEACuBF,EAAUoC,QAAQ3C,EAAWC,GADpD,QACUe,EADV,QAGQiB,KAAKW,aAAa5B,GAElB6B,EAAMC,SALd,gD,iFAQA,WACI1C,SAASC,cAAc,iBACtB8B,iBAAiB,QADlB,uCAC2B,WAAOY,GAAP,iBAAAtC,EAAA,0DAChBsC,EAAEC,OAAOC,QAAQ,YADD,uBAEXzC,EAAMuC,EAAEC,OAAOC,QAAQ,YAAYC,aAAa,YAFrC,SAGI3C,EAAU4C,cAAc3C,GAH5B,QAGTQ,EAHS,SAKXoC,EAAWN,OAAO9B,GALP,2CAD3B,2D,OC/BO,G,MAAA,I,6HALX,sBAAAP,EAAA,sEACU4C,EAAOP,SADjB,2C,+DCAJ,sBAAC,sBAAArC,EAAA,sEACS6C,EAAIR,SADb,0CAAD,K","file":"static/js/main.7e1ba225.chunk.js","sourcesContent":["export const BASE_URL = \"https://gateway.marvel.com/v1/public/\";\r\nexport const URL_COMICS = 'comics';\r\nexport const URL_CHARACTERS = 'characters';\r\n\r\nexport const API_KEY = 'a5837db97d72016c81a7a776f4240db9';","export const ROOT_INDEX = document.querySelector('#root');\r\nexport const ROOT_MODAL = document.querySelector('#modal');","import axios from \"axios\";\r\nimport {API_KEY} from './../constants/api';\r\n\r\nclass GetDataApi {\r\n    async getData(url) {\r\n        try {\r\n            const res = await axios.get(url, {\r\n                params: {\r\n                    apikey: API_KEY,\r\n                    limit: 50\r\n                }\r\n            });\r\n            return res.data.data.results;\r\n\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    };\r\n    async getCharecters(url) {\r\n        console.log(url)\r\n        try {\r\n            const res = await axios.get(`${url}`, {\r\n                params: {\r\n                    apikey: API_KEY\r\n                }\r\n            });\r\n            return res.data.data.results;\r\n        } catch (error) {\r\n            return false\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const getComics = new GetDataApi();","export default __webpack_public_path__ + \"static/media/cancel.1c2963ee.png\";","import {ROOT_MODAL} from './../../constants/root';\r\nimport img from './../img/cancel.png'\r\n\r\nimport './Characters.css'\r\n\r\nclass Characters {\r\n    render(characters) {\r\n        let charactersBlock = '';\r\n        if(characters.length) {\r\n            characters.forEach(el => {\r\n                const imgSrc = el.thumbnail.path + '/' + 'portrait_uncanny' + '.' + el.thumbnail.extension;\r\n                charactersBlock += `\r\n                    <div class=\"charactersEl\">\r\n                        <img class=\"charactersEl_img\" src=\"${imgSrc}\" alt=\"img\"/>\r\n                        <div class=\"charactersEl_name\">\r\n                            ${el.name}\r\n                        </div>\r\n                    </div>\r\n                `;\r\n            });\r\n        } else {\r\n            charactersBlock = '<div class=\"none\">нет данных</div>'\r\n        }\r\n        \r\n        const charactersContainer = `\r\n        <div class=\"modal\"><div class=\"charactersContainer\">${charactersBlock} <img class=\"close\" src=\"${img}\" /></div></div>\r\n        `;\r\n\r\n        ROOT_MODAL.innerHTML = charactersContainer;\r\n        this.close();\r\n\r\n    }\r\n    close() {\r\n        document.querySelector('.close').addEventListener('click', () => {\r\n            ROOT_MODAL.innerHTML = ''\r\n        })\r\n    }\r\n};\r\n\r\nexport default new Characters();","import { ROOT_INDEX } from \"../../constants/root\";\r\nimport './Error.css';\r\n\r\nclass Error {\r\n    render() {\r\n        const htmlWrapper = `\r\n            <div class=\"errorBlock\">\r\n                <span class=\"span\">\r\n                    <p>Произошла ошибка</p>\r\n                    <p>Попробуйте пойзже</p>\r\n                </span>\r\n            </div>\r\n        `;\r\n\r\n        ROOT_INDEX.innerHTML = htmlWrapper;\r\n    }\r\n};\r\n\r\nexport default new Error;","import {API_KEY, BASE_URL, URL_CHARACTERS, URL_COMICS} from '../../constants/api';\r\nimport { ROOT_INDEX } from '../../constants/root';\r\nimport {getComics} from '../../utils/getDataApi';\r\nimport Characters from '../Characters/Characters';\r\nimport Error from '../Error/Error';\r\n\r\nimport './Comics.css'\r\n\r\nclass Comics {\r\n    renderComics(data) {\r\n        let comics = '';\r\n        data.forEach(({id, title, thumbnail: {extension, path}}) => {\r\n\r\n\r\n            if(!path.includes('image_not_available')) {\r\n                const imgSrc = path + '/' + 'portrait_uncanny' + '.' + extension;\r\n                const uri = BASE_URL + URL_COMICS + '/' + id + '/' + URL_CHARACTERS;\r\n            comics += `\r\n            <div class=\"wrapper\">\r\n                <div id=\"${id}\" class=\"commics\" data-uri=\"${uri}\">\r\n                    <img class=\"img\" src=\"${imgSrc}\" alt=\"foto\"/>\r\n                    <div class=\"name\">${title}</div>\r\n                </div>\r\n            </div>\r\n            `\r\n            }\r\n        });\r\n        const commicsBlock = `<div class=\"commicsBlock\">${comics}</div>`;\r\n        ROOT_INDEX.innerHTML = commicsBlock;\r\n        this.eventListener()\r\n    }\r\n    async render() {\r\n        const data = await getComics.getData(BASE_URL + URL_COMICS);\r\n        if(data) {\r\n            this.renderComics(data);\r\n        } else {\r\n            Error.render();\r\n        }\r\n    }\r\n    eventListener() {\r\n        document.querySelector('.commicsBlock')\r\n        .addEventListener('click', async (e) => {\r\n                if(e.target.closest('.commics')) {\r\n                    let url = e.target.closest('.commics').getAttribute('data-uri');\r\n                    const data = await getComics.getCharecters(url);\r\n                    if(data) {\r\n                        Characters.render(data);\r\n                    }\r\n                }\r\n            })\r\n    }\r\n};\r\n\r\nexport default new Comics();\r\n","import Comics from '../Comics/Comics';\r\nimport './App.css'\r\n\r\nclass App {\r\n    async render() {\r\n        await Comics.render();\r\n    }\r\n};\r\n\r\nexport default new App();;","import 'regenerator-runtime/runtime';\r\nimport App from './components/App/App';\r\n\r\n\r\n(async () => { \r\n    await App.render()\r\n})();\r\n"],"sourceRoot":""}